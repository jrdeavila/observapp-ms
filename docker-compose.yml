services:
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: database
    volumes:
      - pgsql:/var/lib/postgresql/data
      - ./database/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    networks:
      - default
    
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - default
  

  gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"
      - "${API_GATEWAY_PORT_SSL:-433}:8080"
    volumes:
      - ./api_gateway:/app
    networks:
      - default
    environment:
      - FRONT_SERVICE_URL=http://front:5173
      - LOAD_DATA_SERVICE_URL=http://load-data:8000
      - AUTHENTICATION_SERVICE_URL=http://authentication:80
      - OBSERVAPP_SERVICE_URL=http://observapp:80
      - USERS_SERVICE_URL=http://users:80
      - METABASE_SERVICE_URL=http://metabase:3000
    depends_on:
      - database
      - authentication-composer
      - observapp-composer
      - users-composer
      - metabase
      - authentication
      - observapp
      - users
      - mongo
      - front
    
  front:
    build: 
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front:/usr/src/app
      - /app/node_modules
    networks:
      - default

  load-data:
    build:
      context: ./load-data
      dockerfile: Dockerfile
    volumes:
      - ./load-data/app:/app
    networks:
      - default
    environment:
      - MONGO_URI=mongodb://mongo:27017

  # Installing Composer dependencies for each service
  authentication-composer:
    image: composer:latest
    container_name: authentication-composer
    volumes:
      - ./authentication:/app
    command: install
    working_dir: /app
    networks:
      - default

  observapp-composer:
    image: composer:latest
    container_name: observapp-composer
    volumes:
      - ./section_manager:/app
    command: install
    working_dir: /app
    networks:
      - default

  users-composer:
    image: composer:latest
    container_name: users-composer
    volumes:
      - ./users_managment:/app
    command: install
    working_dir: /app
    networks:
      - default

  authentication:
    image: jrdeavila/laravel-ms-image:v1
    container_name: authentication
    volumes:
      - ./authentication:/var/www/html
    networks:
      - default
    restart: on-failure
  
  

  observapp:
    image: jrdeavila/laravel-ms-image:v2
    container_name: observapp
    volumes:
      - ./section_manager:/var/www/html
    networks:
      - default
    tty: true
    restart: on-failure

  metabase:
    image: metabase/metabase
    container_name: metabase
    volumes:
      - observapp:/metabase-data
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
      - MB_DB_TYPE=h2
      - MB_JETTY_PORT=3000
      - MB_JETTY_HOST=
    networks:
      - default

  users:
    image: jrdeavila/laravel-ms-image:v1
    container_name: users
    volumes:
      - ./users_managment:/var/www/html
    networks:
      - default
    restart: on-failure

volumes:
  observapp:
    driver: local
  pgsql:
    driver: local

networks:
  default:
    driver: bridge
